openapi: 3.0.3
info:
  title: Aule Web
  description: OpenAPI
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/AuleWeb_services_war/'
paths:
  #1
  '/rest/auth/login':
    post:
      operationId: doLogin
      tags:
        - autenticazione
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "NomeAdmin1"
                password:
                  type: string
                  example: "PasswordAdmin1"
      responses:
        '200':
          description: successful login
          content:
            text/plain:
              schema:
                type: string
          headers:
            Authorization:
              schema:
                type: string
                pattern: 'Bearer [a-z0-9A-Z-]+'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'

  '/rest/auth/logout':
    delete:
      operationId: doLogout
      tags:
        - autenticazione
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: successful logout
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'

#2 ESPORTAZIONE CSV
  '/rest/aule/CSV':
    get:
      operationId: getCsvAule
      tags:
        - aule
      security:
        - bearerAuth: [ ]

      responses:
        '200':
          description: CSV ottenuti
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '500':
          $ref: "#/components/responses/GeneralError"

#2 IMPORTAZIONE CSV
  '/rest/aule/import/CSV':
    post:
      operationId: inserimentoCsvAule
      tags:
        - aule
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
           schema:
             type: file
             $ref: '#/components/schemas/AulaCsv'
      responses:
        '200':
          description: import aule tramite CSV
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aula'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'

  #3 INSERIMENTO DI UNA NUOVA AULA
  '/rest/aule/':
    post:
      operationId: inserimentoAula
      tags:
        - aule
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aula'
      responses:
        '201':
          description: inserimento aula
          content:
            application/json:
              schema:
                type: string
                format: uri
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'

#OP.4 ASSEGNAZIONE DI UN'AULA AD UN GRUPPO
  '/rest/aule/{id_aula}/gruppo/{id_gruppo}':
    put:
      operationId: putAulaToGruppo
      tags:
        - aule
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id_aula
          in: path
          required: true
          schema:
            type: integer
        - name: id_gruppo
          in: path
          required: true
          schema:
            type: integer

      responses:
        '204':
          description: no content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'

#5 LETTURA DELLE INFORMAZIONI DI BASE DI UN'AULA
  '/rest/aule/{id}':
    get:
      operationId: getInfAula
      tags:
        - aule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Informazione di base di un'aula
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AulaBase'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/GeneralError'

#6 LISTA DELLE ATTREZZATURE PRESENTI IN AULA
  '/rest/aule/{id}/attrezzature':
    get:
      operationId: getListaAttAula
      tags:
        - aule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attrezzature aula
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attrezzature'
        '500':
          $ref: '#/components/responses/GeneralError'

#7 INSERIMENTO DI UN NUOVO EVENTO
  '/rest/evento/':
    post:
      operationId: inserimentoEvento
      tags:
        - evento
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '201':
          description: inserimento evento
          content:
            application/json:
              schema:
                type: string
                format: uri
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'

#8 MODIFICA DI UN EVENTO
  '/rest/evento/{id_evento}/{id_evento_aula}/{data_evento}':
    put:
      operationId: modificaEvento
      tags:
        - evento
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id_evento
          in: path
          required: true
          schema:
            type: integer
        - name: id_evento_aula
          in: path
          required: true
          schema:
            type: integer
        - name: data_evento
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '204':
          description: no content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'

#9 LETTURA DELLE INFORMAZIONI DI UN EVENTO
  '/rest/evento/{id}':
    get:
      operationId: getInformazioniEvento
      tags:
        - evento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: informazioni evento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/GeneralError'

#10 LISTA DEGLI EVENTI ASSOCIATI AD UNA SPECIFICA AULA IN UNA DETERMINATA SETTIMANA
  '/rest/evento/{id_aula}/{data_inizio}/{data_fine}':
    get:
      operationId: getListaEventiByAulaAndDate
      tags:
        - evento
      parameters:
        - name: id_aula
          in: path
          required: true
          schema:
            type: integer
        - name: data_inizio
          in: path
          required: true
          schema:
            type: string
            format: date
        - name: data_fine
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: informazioni evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
        '500':
          $ref: '#/components/responses/GeneralError'

#11 LISTA DEGLI EVENTI ATTUALI E QUELLI DELLE PROSSIME 3 ORE
  '/rest/evento/eventiInCorso':
    get:
      operationId: getEventiInCorso
      tags:
        - evento
      responses:
        '200':
          description: eventi in corso e eventi prossime 3 ore
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
        '404':
          $ref: '#/components/responses/NotFoundError'

#12 ESPORTAZIONE TRAMITE ICALENDAR
  '/rest/evento/icalendar/esporta/{data_inizio}/{data_fine}':
    get:
      operationId: exportIcalendar
      tags:
        - evento
      parameters:
        - name: data_inizio
          in: path
          required: true
          schema:
            type: string
            format: date
        - name: data_fine
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: esport eventi in formato icalendar
          content:
            multipart/form-data:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventoIcalendar'
        '500':
          $ref: '#/components/responses/GeneralError'











































































components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: internalToken
  responses:
    GeneralError:
      description: errore generale
      content:
        text/plain:
          schema:
            type: string
            example: "Messaggio di errore"
    UnauthorizedError:
      description: bearer token mancante o non valido
    NotFoundError:
      description: elemento non trovato
      content:
        text/plain:
          schema:
            type: string
            example: "Elemento inesistente"
    BadRequest:
      description: richiesta non valida
      content:
        text/plain:
          schema:
            type: string
            example: "Richiesta non valida"
    Forbidden:
      description: operazione non permessa
      content:
        text/plain:
          schema:
            type: string
            example: "Operazione non permessa"
  schemas:
    Aula:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nomeAula:
          type: string
          example: "C 1.10"
        luogo:
          type: string
          example: "Coppito 1"
        emailResponsabile:
          type: string
          example: "responsabileAula@gmail.com"
        idAttrezzature:
          type: integer
          format: int32
          description: id relativo alle attrezzature corrispondenti
        idGruppo:
          type: integer
          format: int32
          description: id relativo al gruppo corrispondente

    Gruppo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          type: string
          example: "Dipartimento di ingegneria"
        Descrizione:
          type: string
          description: Questa è la descrizione generica di un dipartimento

    Evento:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nomeEvento:
          type: string
          example: "Corso di SWA"
        nomeResposabile:
          type: string
          example: "Professore X"
        descrizioneEvento:
          type: string
          description: Questa è la descrizione generale di un evento
        emailResponsabile:
          type: string
          example: "responsabileEvento@gmail.com"
        dataEvento:
          type: string
          format: date
          example: "2023-09-25"
        idAula:
          type: integer
          format: int32
          description: Questo è l'id relativo all'aula in cui si svolge l'evento
        startTime:
          type: string
          format: dateTime
          description: Orario d'inizio evento
        endTime:
          type: string
          format: dateTime
          description: Orario di fine evento

    Attrezzature:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id relativo all'aula
        numeroTavoli:
          type: integer
          format: int32
        numeroSedie:
          type: integer
          format: int32
        numeroLavagne:
          type: integer
          format: int32

    Boss:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
          example: "NomeAdmin1"
        Password:
          type: string
          format: password
          example: "PasswordAdmin1"

    AulaBase:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nomeAula:
          type: string
          example: "C 1.10"
        idGruppo:
          type: integer
          format: int32

    EventoIcalendar:
      type: object
      properties:
        nomeEvento:
          type: string
          example: 'Evento 1'
        dataEvento:
          type: string
          format: date
          example: '2023-07-25'
        startTime:
          type: string
          format: dateTime
          example: '08:00'
        endTime:
          type: string
          format: dateTime
          example: "16:00"
    AulaCsv:
      type: object
      properties:
        stringaCsv:
          type: string
          example: '1,Aula 1,Building A,First Floor,responsabile1@example.com,4,1'



























